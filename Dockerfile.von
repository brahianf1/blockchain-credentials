# Dockerfile.von - Dockerfile personalizado para VON Network con permisos corregidos

# Usar el Dockerfile original de von-network como base
FROM ubuntu:20.04

# Variables de construcción
ARG RUST_VERSION=1.79.0
ARG indy_sdk_revision=v1.16.0
ARG indy_node_version=1.13.2

# Establecer timezone para evitar prompts interactivos
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    curl \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    python3 \
    python3-pip \
    build-essential \
    libssl-dev \
    pkg-config \
    git \
    && rm -rf /var/lib/apt/lists/*

# Instalar Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${RUST_VERSION}
ENV PATH="/root/.cargo/bin:${PATH}"

# Crear usuario indy
RUN useradd -ms /bin/bash -u 1000 indy

# Instalar Indy Node
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CE7709D068DB5E88 && \
    add-apt-repository "deb https://repo.sovrin.org/sdk/deb bionic stable" && \
    apt-get update && \
    apt-get install -y indy-node=${indy_node_version} indy-plenum

# Copiar código de von-network
WORKDIR /home/indy
COPY --chown=indy:indy ./von-network /home/indy/

# CRÍTICO: Dar permisos de ejecución a TODOS los scripts y binarios
RUN chmod +x /home/indy/scripts/*.sh && \
    chmod +x /home/indy/bin/* && \
    chmod +x /home/indy/manage

# Cambiar propietario de todo a indy
RUN chown -R indy:indy /home/indy

# Cambiar al usuario indy
USER indy

# Exponer puertos
EXPOSE 8000 9701 9702 9703 9704 9705 9706 9707 9708

# Directorio de trabajo
WORKDIR /home/indy