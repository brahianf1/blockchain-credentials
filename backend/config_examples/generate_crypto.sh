#!/bin/bash

# Este script automatiza la generaci√≥n de los cripto-materiales de Hyperledger Fabric
# utilizando el m√©todo oficial y rutas absolutas para m√°xima robustez.
set -e

# --- CONFIGURACI√ìN ---
FABRIC_VERSION="2.5.5"
FABRIC_CA_VERSION="1.5.7"
TEMP_DIR="/tmp/fabric-official-setup"
DEST_DIR="/srv/dokploy-data/blockchain-secrets"

# --- DEFINICI√ìN DE RUTAS ABSOLUTAS ---
# Se definen las rutas clave al principio para evitar cualquier ambig√ºedad.
SAMPLES_DIR="${TEMP_DIR}/fabric-samples"
BIN_DIR="${SAMPLES_DIR}/bin"
CONFIG_DIR="${SAMPLES_DIR}/config"
CRYPTO_CONFIG_FILE="${SAMPLES_DIR}/test-network/crypto-config.yaml"
OUTPUT_DIR="${SAMPLES_DIR}/organizations"

# --- EJECUCI√ìN ---

# --- INICIO DEL TEMPORIZADOR ---
START_TIME=$SECONDS
echo "‚ñ∂Ô∏è Iniciando la generaci√≥n de cripto-materiales (M√©todo Final y Robusto)..."
echo

# 1. Limpieza total de ejecuciones anteriores.
echo "üßº (Paso 1/6) Limpiando directorios y contenedores Docker detenidos..."
rm -rf "$TEMP_DIR"
rm -rf "${DEST_DIR}/organizations"
mkdir -p "$TEMP_DIR"
docker container prune -f > /dev/null 2>&1
echo "‚úÖ Entorno limpio."
echo

# 2. Descargar todo lo necesario usando el script oficial.
echo "üöÄ (Paso 2/6) Ejecutando 'install-fabric.sh' para obtener binarios y samples..."
cd "$TEMP_DIR"
curl -sSL https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh | bash -s -- -f ${FABRIC_VERSION} -c ${FABRIC_CA_VERSION}
echo "‚úÖ Binarios y samples descargados en '${SAMPLES_DIR}'."
echo

# 3. Crear el archivo de configuraci√≥n para cryptogen.
echo "üìù (Paso 3/6) Creando archivo de configuraci√≥n 'crypto-config.yaml'..."
cat <<EOF > "${CRYPTO_CONFIG_FILE}"
OrdererOrgs:
  - Name: Orderer
    Domain: example.com
    Specs:
      - Hostname: orderer
PeerOrgs:
  - Name: Org1
    Domain: org1.example.com
    EnableNodeOUs: true
    Template:
      Count: 1
    Users:
      Count: 1
  - Name: Org2
    Domain: org2.example.com
    EnableNodeOUs: true
    Template:
      Count: 1
    Users:
      Count: 1
EOF
echo "‚úÖ Archivo de configuraci√≥n creado en '${CRYPTO_CONFIG_FILE}'."
echo

# 4. Generar los cripto-materiales usando la ruta absoluta.
echo "üîê (Paso 4/6) Ejecutando 'cryptogen' con ruta absoluta..."
"${BIN_DIR}/cryptogen" generate --config="${CRYPTO_CONFIG_FILE}" --output="${OUTPUT_DIR}"
echo "‚úÖ Cripto-materiales generados en '${OUTPUT_DIR}'."
echo

# 5. Mover la carpeta 'organizations' al destino final.
echo "üöö (Paso 5/6) Moviendo artefactos a ${DEST_DIR}..."
mv "${OUTPUT_DIR}" "${DEST_DIR}/"
echo "‚úÖ Carpeta 'organizations' movida exitosamente."
echo

# 6. Limpieza final del directorio temporal.
echo "üßπ (Paso 6/6) Limpiando directorio temporal..."
cd ~
rm -rf "$TEMP_DIR"
echo "‚úÖ Limpieza finalizada."
echo

# --- FINAL ---
DURATION=$(( SECONDS - START_TIME ))
MINUTES=$(( DURATION / 60 ))
SECONDS_REMAINING=$(( DURATION % 60 ))

echo "------------------------------------------------------------------"
echo "‚úÖ Proceso completado en: ${MINUTES} minuto(s) y ${SECONDS_REMAINING} segundo(s)."
echo "------------------------------------------------------------------"
echo
echo "üéâ ¬°√âXITO DEFINITIVO! Los cripto-materiales est√°n listos."
echo "üü¢ Por favor, ve a Dokploy y redespliega tu aplicaci√≥n ahora."
