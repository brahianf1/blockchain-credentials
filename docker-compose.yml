volumes:
  db_data:
    driver: local
  moodle_data:
    driver: local
  orderer.example.com:
  peer0.org1.example.com:
  peer0.org2.example.com:


networks:
  moodle_network:
    driver: bridge
  fabric_network:
    driver: bridge
  acapy_network:
    driver: bridge


services:
  # Servicio ACA-Py Agent
  acapy-agent:
    build:
      context: ./backend/acapy
      dockerfile: Dockerfile.acapy
    container_name: acapy-agent
    ports:
      - "8020:8020"
      - "8021:8021"
    environment:
      - GENESIS_URL=${ACAPY_GENESIS_URL}
    entrypoint: aca-py
    command:
      - start
      - --auto-provision
      - --seed
      - ${ACAPY_DID_SEED}
      - --admin
      - "0.0.0.0"
      - "8020"
      - --admin-insecure-mode
      - --endpoint
      - ${ACAPY_ENDPOINT}
      - --inbound-transport
      - http
      - "0.0.0.0"
      - "8021"
      - --outbound-transport
      - http
      - --genesis-url
      - ${ACAPY_GENESIS_URL}
      - --read-only-ledger
      - --wallet-type
      - askar
      - --wallet-name
      - ${ACAPY_WALLET_NAME}
      - --wallet-key
      - ${ACAPY_WALLET_KEY}
      - --log-level
      - INFO
      - --auto-accept-requests
      - --auto-accept-invites
      - --auto-ping-connection
    networks:
      - acapy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/status/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  # Controller Python
  python-controller:
    build:
      context: ./backend
      dockerfile: Dockerfile.controller
    container_name: python-controller
    ports:
      - "3000:3000"
    environment:
      - ACAPY_ADMIN_URL=http://acapy-agent:8020
      - ACAPY_PUBLIC_URL=http://acapy-agent:8021
      - FABRIC_NETWORK_PATH=/crypto-config
    volumes:
      - ${CRYPTO_CONFIG_PATH}:/crypto-config:ro
    depends_on:
      acapy-agent:
        condition: service_healthy
    networks:
      - moodle_network
      - fabric_network
      - acapy_network
    restart: unless-stopped


  # Aplicaci√≥n Moodle
  moodle-app:
    build:
      context: ./moodle
      dockerfile: Dockerfile
    container_name: moodle-app
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      MOODLE_DB_TYPE: pgsql
      MOODLE_DB_HOST: moodle-db
      MOODLE_DB_PORT: 5432
      MOODLE_DB_NAME: ${MOODLE_DB_NAME}
      MOODLE_DB_USER: ${MOODLE_DB_USER}
      MOODLE_DB_PASS: ${MOODLE_DB_PASSWORD}
    volumes:
      - moodle_data:/var/www/moodledata
      - ./moodle/moodle-plugin/credenciales:/var/www/html/blocks/credenciales
    depends_on:
      - moodle-db
    networks:
      - moodle_network
    restart: unless-stopped


  # Base de datos de Moodle
  moodle-db:
    image: postgres:15-alpine
    container_name: moodle-db
    environment:
      POSTGRES_DB: ${MOODLE_DB_NAME}
      POSTGRES_USER: ${MOODLE_DB_USER}
      POSTGRES_PASSWORD: ${MOODLE_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - moodle_network
    restart: unless-stopped
    ports:
      - "5432:5432"


  # Servicios de Hyperledger Fabric (sin cambios)
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.example.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ./hyperledger-fabric/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
      - ./hyperledger-fabric/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
      - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 7053:7053
      - 9443:9443
    networks:
      - fabric_network


  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org1.example.com:9444
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0org1"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    volumes:
      - ./hyperledger-fabric/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com:/etc/hyperledger/fabric
      - peer0.org1.example.com:/var/hyperledger/production
    working_dir: /root
    command: peer node start
    ports:
      - 7051:7051
      - 9444:9444
    networks:
      - fabric_network


  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:9051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org2.example.com:9445
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0org2"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    volumes:
      - ./hyperledger-fabric/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com:/etc/hyperledger/fabric
      - peer0.org2.example.com:/var/hyperledger/production
    working_dir: /root
    command: peer node start
    ports:
      - 9051:9051
      - 9445:9445
    networks:
      - fabric_network


  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    labels:
      service: hyperledger-fabric
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/sh
    volumes:
      - /var/run/:/host/var/run/
      - ./hyperledger-fabric/test-network/organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      - ./hyperledger-fabric/test-network/scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      - peer0.org2.example.com
    networks:
      - fabric_network